import ollama
import json

PROMPT_BASE = """
Voc√™ √© um especialista em nutri√ß√£o canina.
Sua tarefa √© buscar e recomendar ra√ß√µes seguras para um cachorro com alergias alimentares espec√≠ficas.

ü¶¥ Sites confi√°veis (buscar APENAS nestes dom√≠nios):
1. https://www.purina.com.br
2. https://www.royalcanin.com.br
3. https://www.premierpet.com.br
4. https://www.golden.com.br
5. https://www.petzone.com.br

‚öôÔ∏è Instru√ß√µes:
- Pesquise apenas nesses sites.
- Responda em portugu√™s.
- Liste no m√°ximo 5 op√ß√µes de ra√ß√µes seguras.
- Sem coment√°rios externos.
- Listar a ra√ß√£o somente se souber que existe e se existe nos parametros de nescessidade do cachorro, caso tenha algum comentario, adicionar no local message do json. 
- Sempre adicionar comentarios em message no json, dizendo sobre as ra√ßoes que achou, sobre a confiabilidade e dizer de forma clara o por que cada ra√ßao √© boa para o animal.
- Inclua:
    - Nome da ra√ß√£o
    - Marca
- Ignore resultados de f√≥runs, blogs ou an√∫ncios.
- Se n√£o houver op√ß√µes seguras, diga claramente que n√£o encontrou.

üê∂ Alergias do cachorro:
{alergias}

‚ö†Ô∏è IMPORTANTE:
- Responda **apenas** com JSON v√°lido.
- N√£o inclua aspas externas, \n ou notas.
- N√£o adicione coment√°rios fora do JSON.
- Sempre o nome do array deve ser "racoes".
- Sempre JSON com formato correto.

Responda **somente** no formato JSON **chamado racoes** **com a chave racoes** apontando para a lista de ra√ß√µes. Por exemplo:

{{
  "racoes": [
    {{
      "nome": "",
      "marca": "",
      "mensagem": ""
    }}
  ]
}}

- Sempre use essa estrutura, sem aspas externas, sem notas, sem explica√ß√µes.

"""

def buscar(alergias: dict):
    alergias_str = ", ".join([f"{k}: {v}" for k, v in alergias.items()])
    prompt_formatado = PROMPT_BASE.format(alergias=alergias_str)
    resposta = ollama.chat(
        model="mistral",
        messages=[
            {"role": "system", "content": "Voc√™ √© um assistente √∫til e especialista em ra√ß√µes caninas."},
            {"role": "system", "content": "Voc√™ s√≥ pode responder JSON. Nada mais. Sem aspas externas, sem notas, sem explica√ß√µes."},
            {"role": "user", "content": prompt_formatado}
        ]
    )

    conteudo = resposta["mensagem"]["content"]
    return conteudo



result = buscar({"cenoura" : "positivo", "beterraba" : "negativo"})
print(result)